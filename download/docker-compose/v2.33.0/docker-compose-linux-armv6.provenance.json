{
  "_type": "https://in-toto.io/Statement/v0.1",
  "predicateType": "https://slsa.dev/provenance/v0.2",
  "subject": [
    {
      "name": "docker-compose-linux-armv6",
      "digest": {
        "sha256": "360976f92dbf4b575bb9beb2737952709c685d1441eebd90c7eeb63225a44ada"
      }
    }
  ],
  "predicate": {
    "builder": {
      "id": "https://github.com/docker/compose/actions/runs/13280109488/attempts/1"
    },
    "buildType": "https://mobyproject.org/buildkit@v1",
    "materials": [
      {
        "uri": "pkg:docker/crazymax/osxcross@11.3-alpine?platform=linux%2Farm%2Fv6",
        "digest": {
          "sha256": "a5bd09128beabccdbe54715125ead9bb0aba7f73b58317343030d34fafd59ea3"
        }
      },
      {
        "uri": "pkg:docker/docker/buildkit-syft-scanner@stable-1",
        "digest": {
          "sha256": "1f5d53d5f6c0e565f8809ba0d77a1cc02f62541028a23e35e75dc8ac7ec08bc6"
        }
      },
      {
        "uri": "pkg:docker/docker/dockerfile@1",
        "digest": {
          "sha256": "93bfd3b68c109427185cd78b4779fc82b484b0b7618e36d0f104d4d801e66d25"
        }
      },
      {
        "uri": "pkg:docker/alpine@latest?platform=linux%2Famd64",
        "digest": {
          "sha256": "56fa17d2a7e7f168a043a2712e63aed1f8543aeafdcee47c58dcffe38ed51099"
        }
      },
      {
        "uri": "pkg:docker/golang@1.22.10-alpine?platform=linux%2Famd64",
        "digest": {
          "sha256": "371d9fe4b716720eb5d955f7e50390d2adba92638fd8bd9ce05d336255485872"
        }
      },
      {
        "uri": "pkg:docker/tonistiigi/xx@1.6.1?platform=linux%2Famd64",
        "digest": {
          "sha256": "923441d7c25f1e2eb5789f82d987693c47b8ed987c4ab3b075d6ed2b5d6779a3"
        }
      }
    ],
    "invocation": {
      "configSource": {
        "entryPoint": "Dockerfile"
      },
      "parameters": {
        "frontend": "gateway.v0",
        "args": {
          "build-arg:BUILDKIT_CONTEXT_KEEP_GIT_DIR": "1",
          "build-arg:BUILD_TAGS": "e2e",
          "cmdline": "docker/dockerfile:1",
          "source": "docker/dockerfile:1",
          "target": "release"
        },
        "locals": [
          {
            "name": "context"
          },
          {
            "name": "dockerfile"
          }
        ]
      },
      "environment": {
        "platform": "linux/amd64"
      }
    },
    "buildConfig": {
      "llbDefinition": [
        {
          "id": "step0",
          "op": {
            "Op": {
              "source": {
                "identifier": "docker-image://docker.io/library/alpine:latest@sha256:56fa17d2a7e7f168a043a2712e63aed1f8543aeafdcee47c58dcffe38ed51099"
              }
            },
            "platform": {
              "Architecture": "amd64",
              "OS": "linux"
            },
            "constraints": {}
          }
        },
        {
          "id": "step1",
          "op": {
            "Op": {
              "file": {
                "actions": [
                  {
                    "input": 0,
                    "secondaryInput": -1,
                    "output": 0,
                    "Action": {
                      "mkdir": {
                        "path": "/work",
                        "mode": 493,
                        "makeParents": true,
                        "timestamp": -1
                      }
                    }
                  }
                ]
              }
            },
            "constraints": {}
          },
          "inputs": [
            "step0:0"
          ]
        },
        {
          "id": "step2",
          "op": {
            "Op": {
              "source": {
                "identifier": "docker-image://docker.io/library/golang:1.22.10-alpine@sha256:371d9fe4b716720eb5d955f7e50390d2adba92638fd8bd9ce05d336255485872"
              }
            },
            "platform": {
              "Architecture": "amd64",
              "OS": "linux"
            },
            "constraints": {}
          }
        },
        {
          "id": "step3",
          "op": {
            "Op": {
              "source": {
                "identifier": "docker-image://docker.io/tonistiigi/xx:1.6.1@sha256:923441d7c25f1e2eb5789f82d987693c47b8ed987c4ab3b075d6ed2b5d6779a3"
              }
            },
            "platform": {
              "Architecture": "amd64",
              "OS": "linux"
            },
            "constraints": {}
          }
        },
        {
          "id": "step4",
          "op": {
            "Op": {
              "file": {
                "actions": [
                  {
                    "input": 0,
                    "secondaryInput": 1,
                    "output": 0,
                    "Action": {
                      "copy": {
                        "src": "/",
                        "dest": "/",
                        "mode": -1,
                        "followSymlink": true,
                        "dirCopyContents": true,
                        "createDestPath": true,
                        "allowWildcard": true,
                        "allowEmptyWildcard": true,
                        "timestamp": -1
                      }
                    }
                  }
                ]
              }
            },
            "constraints": {}
          },
          "inputs": [
            "step2:0",
            "step3:0"
          ]
        },
        {
          "id": "step5",
          "op": {
            "Op": {
              "exec": {
                "meta": {
                  "args": [
                    "/bin/sh",
                    "-c",
                    "apk add --no-cache       clang       docker       file       findutils       git       make       protoc       protobuf-dev"
                  ],
                  "env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                  ],
                  "cwd": "/go",
                  "removeMountStubsRecursive": true
                },
                "mounts": [
                  {
                    "dest": "/"
                  }
                ]
              }
            },
            "platform": {
              "Architecture": "amd64",
              "OS": "linux"
            },
            "constraints": {}
          },
          "inputs": [
            "step4:0"
          ]
        },
        {
          "id": "step6",
          "op": {
            "Op": {
              "file": {
                "actions": [
                  {
                    "input": 0,
                    "secondaryInput": -1,
                    "output": 0,
                    "Action": {
                      "mkdir": {
                        "path": "/src",
                        "mode": 493,
                        "makeParents": true,
                        "timestamp": -1
                      }
                    }
                  }
                ]
              }
            },
            "constraints": {}
          },
          "inputs": [
            "step5:0"
          ]
        },
        {
          "id": "step7",
          "op": {
            "Op": {
              "source": {
                "identifier": "local://context",
                "attrs": {
                  "local.excludepatterns": "[\"bin\"]",
                  "local.sharedkeyhint": "context"
                }
              }
            },
            "constraints": {}
          }
        },
        {
          "id": "step8",
          "op": {
            "Op": {
              "file": {
                "actions": [
                  {
                    "input": 0,
                    "secondaryInput": 1,
                    "output": 0,
                    "Action": {
                      "copy": {
                        "src": "/go.*",
                        "dest": "/src/",
                        "mode": -1,
                        "followSymlink": true,
                        "dirCopyContents": true,
                        "createDestPath": true,
                        "allowWildcard": true,
                        "allowEmptyWildcard": true,
                        "timestamp": -1
                      }
                    }
                  }
                ]
              }
            },
            "constraints": {}
          },
          "inputs": [
            "step6:0",
            "step7:0"
          ]
        },
        {
          "id": "step9",
          "op": {
            "Op": {
              "exec": {
                "meta": {
                  "args": [
                    "/bin/sh",
                    "-c",
                    "go mod download"
                  ],
                  "env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go",
                    "CGO_ENABLED=0"
                  ],
                  "cwd": "/src",
                  "removeMountStubsRecursive": true
                },
                "mounts": [
                  {
                    "dest": "/"
                  },
                  {
                    "input": -1,
                    "dest": "/go/pkg/mod",
                    "output": -1,
                    "mountType": 3,
                    "cacheOpt": {
                      "ID": "//go/pkg/mod"
                    }
                  },
                  {
                    "input": -1,
                    "dest": "/root/.cache/go-build",
                    "output": -1,
                    "mountType": 3,
                    "cacheOpt": {
                      "ID": "//root/.cache/go-build"
                    }
                  }
                ]
              }
            },
            "platform": {
              "Architecture": "amd64",
              "OS": "linux"
            },
            "constraints": {}
          },
          "inputs": [
            "step8:0"
          ]
        },
        {
          "id": "step10",
          "op": {
            "Op": {
              "source": {
                "identifier": "docker-image://docker.io/crazymax/osxcross:11.3-alpine@sha256:a5bd09128beabccdbe54715125ead9bb0aba7f73b58317343030d34fafd59ea3"
              }
            },
            "platform": {
              "Architecture": "arm",
              "OS": "linux",
              "Variant": "v6"
            },
            "constraints": {}
          }
        },
        {
          "id": "step11",
          "op": {
            "Op": {
              "exec": {
                "meta": {
                  "args": [
                    "/bin/sh",
                    "-c",
                    "xx-go --wrap \u0026\u0026     if [ \"$(xx-info os)\" == \"darwin\" ]; then export CGO_ENABLED=1; fi \u0026\u0026     make build GO_BUILDTAGS=\"$BUILD_TAGS\" DESTDIR=/out \u0026\u0026     xx-verify --static /out/docker-compose"
                  ],
                  "env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.22.10",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go",
                    "CGO_ENABLED=0",
                    "BUILD_TAGS=e2e",
                    "TARGETPLATFORM=linux/arm/v6"
                  ],
                  "cwd": "/src",
                  "removeMountStubsRecursive": true
                },
                "mounts": [
                  {
                    "dest": "/"
                  },
                  {
                    "input": -1,
                    "dest": "/go/pkg/mod",
                    "output": -1,
                    "mountType": 3,
                    "cacheOpt": {
                      "ID": "//go/pkg/mod"
                    }
                  },
                  {
                    "input": -1,
                    "dest": "/root/.cache",
                    "output": -1,
                    "mountType": 3,
                    "cacheOpt": {
                      "ID": "//root/.cache"
                    }
                  },
                  {
                    "input": 1,
                    "dest": "/src",
                    "output": -1,
                    "readonly": true
                  },
                  {
                    "input": 2,
                    "selector": "/osxsdk",
                    "dest": "/xx-sdk",
                    "output": -1,
                    "readonly": true
                  }
                ]
              }
            },
            "platform": {
              "Architecture": "amd64",
              "OS": "linux"
            },
            "constraints": {}
          },
          "inputs": [
            "step9:0",
            "step7:0",
            "step10:0"
          ]
        },
        {
          "id": "step12",
          "op": {
            "Op": {
              "file": {
                "actions": [
                  {
                    "input": -1,
                    "secondaryInput": 0,
                    "output": 0,
                    "Action": {
                      "copy": {
                        "src": "/out/docker-compose",
                        "dest": "/",
                        "mode": -1,
                        "followSymlink": true,
                        "dirCopyContents": true,
                        "createDestPath": true,
                        "allowWildcard": true,
                        "allowEmptyWildcard": true,
                        "timestamp": -1
                      }
                    }
                  }
                ]
              }
            },
            "constraints": {}
          },
          "inputs": [
            "step11:0"
          ]
        },
        {
          "id": "step13",
          "op": {
            "Op": {
              "exec": {
                "meta": {
                  "args": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /out \u0026\u0026     TARGETARCH=$([ \"$TARGETARCH\" = \"amd64\" ] \u0026\u0026 echo \"x86_64\" || echo \"$TARGETARCH\");     TARGETARCH=$([ \"$TARGETARCH\" = \"arm64\" ] \u0026\u0026 echo \"aarch64\" || echo \"$TARGETARCH\");     cp docker-compose* \"/out/docker-compose-${TARGETOS}-${TARGETARCH}${TARGETVARIANT}$(ls docker-compose* | sed -e 's/^docker-compose//')\""
                  ],
                  "env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "TARGETOS=linux",
                    "TARGETARCH=arm",
                    "TARGETVARIANT=v6"
                  ],
                  "cwd": "/work",
                  "removeMountStubsRecursive": true
                },
                "mounts": [
                  {
                    "dest": "/"
                  },
                  {
                    "input": 1,
                    "dest": "/work",
                    "output": -1,
                    "readonly": true
                  }
                ]
              }
            },
            "platform": {
              "Architecture": "amd64",
              "OS": "linux"
            },
            "constraints": {}
          },
          "inputs": [
            "step1:0",
            "step12:0"
          ]
        },
        {
          "id": "step14",
          "op": {
            "Op": {
              "file": {
                "actions": [
                  {
                    "input": -1,
                    "secondaryInput": 0,
                    "output": 0,
                    "Action": {
                      "copy": {
                        "src": "/out",
                        "dest": "/",
                        "mode": -1,
                        "followSymlink": true,
                        "dirCopyContents": true,
                        "createDestPath": true,
                        "allowWildcard": true,
                        "allowEmptyWildcard": true,
                        "timestamp": -1
                      }
                    }
                  }
                ]
              }
            },
            "constraints": {}
          },
          "inputs": [
            "step13:0"
          ]
        },
        {
          "id": "step15",
          "op": {
            "Op": {}
          },
          "inputs": [
            "step14:0"
          ]
        }
      ],
      "digestMapping": {
        "sha256:1280bbc94ae32ffbf021a9e6cb0572f3585b4580353d76652d97af5b80d6f886": "step15",
        "sha256:1a74c3107c5afe048b127afc4d7e4ef6717811415d8176d55443324a12196e8f": "step7",
        "sha256:2de5a027d794f90967be94d824ba5b812d9e9e366c5ee33051f19d6c935266c7": "step0",
        "sha256:4064e69a6f64b1486a48bf000ae5f8ab33edec29190c57a6a46b0ff9d43f9a83": "step8",
        "sha256:57e73c51ca0d054034e36c12985896bf82008455c29f321cb4a2e71ef04d1d2c": "step12",
        "sha256:6dfb06d9f34811fbc284d2f6ad70a099011641cd4c5cee2b15c489665641131a": "step5",
        "sha256:7552b193e6f162f58322147c1a3810887568244e3382a85c7b44bc3c02e9e6bd": "step11",
        "sha256:78c40a88d11844fcc18b9d0e3816d6654b80882d78d849825573e309972d0f2c": "step6",
        "sha256:7c7fc3e106f52b3d815bd27f6749d5a2584c3ee2569fd97a18f18bdaaf567e4e": "step13",
        "sha256:a4f6d6969f35aa20b9daf81b6d8e20eda11238e26ba04ecf5f7350c722a9acfb": "step10",
        "sha256:bcd722273d7e261e6a9f6c15bf6209b71e969f02894c9ae4fb661acf93c02c3d": "step4",
        "sha256:d3aafa116f171ecee4f7be8af993cdce4d5e43e4c6a9dd1f7f16f92adb304082": "step14",
        "sha256:d5371025f5b954764d8b983d764ec85e7de231d56a236ca3e5a9502d0e7085a0": "step1",
        "sha256:d5b1b5c63b3fd7917f6704a2f0d8573b8c5e1034db796c6e979c230c3bb23897": "step9",
        "sha256:f88fc0bf6c422295a1b44ad1c8b87c95d9b71e2bfeb643e25d0236c8f75e87e3": "step3",
        "sha256:fed5c182bab94d2614ddc1a931cdd5cb3e8c38fa2bbffc9ad5867452906c1c42": "step2"
      }
    },
    "metadata": {
      "buildInvocationID": "wpn2xlhxvh8ffovrdz2i9ngl7",
      "buildStartedOn": "2025-02-12T07:20:38.690166591Z",
      "buildFinishedOn": "2025-02-12T07:22:15.05597048Z",
      "completeness": {
        "parameters": true,
        "environment": true,
        "materials": false
      },
      "reproducible": false,
      "https://mobyproject.org/buildkit@v1#metadata": {
        "vcs": {
          "localdir:context": ".",
          "localdir:dockerfile": ".",
          "revision": "036da47950e2b91f96d7c3331ff110651064687c",
          "source": "https://github.com/docker/compose"
        },
        "source": {
          "locations": {
            "step0": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 184
                      },
                      "end": {
                        "line": 184
                      }
                    }
                  ]
                }
              ]
            },
            "step1": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 185
                      },
                      "end": {
                        "line": 185
                      }
                    }
                  ]
                }
              ]
            },
            "step10": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 31
                      },
                      "end": {
                        "line": 31
                      }
                    }
                  ]
                }
              ]
            },
            "step11": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 81
                      },
                      "end": {
                        "line": 81
                      }
                    },
                    {
                      "start": {
                        "line": 82
                      },
                      "end": {
                        "line": 82
                      }
                    },
                    {
                      "start": {
                        "line": 83
                      },
                      "end": {
                        "line": 83
                      }
                    },
                    {
                      "start": {
                        "line": 84
                      },
                      "end": {
                        "line": 84
                      }
                    },
                    {
                      "start": {
                        "line": 85
                      },
                      "end": {
                        "line": 85
                      }
                    },
                    {
                      "start": {
                        "line": 86
                      },
                      "end": {
                        "line": 86
                      }
                    },
                    {
                      "start": {
                        "line": 87
                      },
                      "end": {
                        "line": 87
                      }
                    },
                    {
                      "start": {
                        "line": 88
                      },
                      "end": {
                        "line": 88
                      }
                    }
                  ]
                }
              ]
            },
            "step12": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 175
                      },
                      "end": {
                        "line": 175
                      }
                    }
                  ]
                }
              ]
            },
            "step13": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 189
                      },
                      "end": {
                        "line": 189
                      }
                    },
                    {
                      "start": {
                        "line": 190
                      },
                      "end": {
                        "line": 190
                      }
                    },
                    {
                      "start": {
                        "line": 191
                      },
                      "end": {
                        "line": 191
                      }
                    },
                    {
                      "start": {
                        "line": 192
                      },
                      "end": {
                        "line": 192
                      }
                    },
                    {
                      "start": {
                        "line": 193
                      },
                      "end": {
                        "line": 193
                      }
                    },
                    {
                      "start": {
                        "line": 194
                      },
                      "end": {
                        "line": 194
                      }
                    }
                  ]
                }
              ]
            },
            "step14": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 197
                      },
                      "end": {
                        "line": 197
                      }
                    }
                  ]
                }
              ]
            },
            "step2": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 36
                      },
                      "end": {
                        "line": 36
                      }
                    }
                  ]
                }
              ]
            },
            "step3": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 28
                      },
                      "end": {
                        "line": 28
                      }
                    }
                  ]
                }
              ]
            },
            "step4": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 37
                      },
                      "end": {
                        "line": 37
                      }
                    }
                  ]
                }
              ]
            },
            "step5": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 38
                      },
                      "end": {
                        "line": 38
                      }
                    },
                    {
                      "start": {
                        "line": 39
                      },
                      "end": {
                        "line": 39
                      }
                    },
                    {
                      "start": {
                        "line": 40
                      },
                      "end": {
                        "line": 40
                      }
                    },
                    {
                      "start": {
                        "line": 41
                      },
                      "end": {
                        "line": 41
                      }
                    },
                    {
                      "start": {
                        "line": 42
                      },
                      "end": {
                        "line": 42
                      }
                    },
                    {
                      "start": {
                        "line": 43
                      },
                      "end": {
                        "line": 43
                      }
                    },
                    {
                      "start": {
                        "line": 44
                      },
                      "end": {
                        "line": 44
                      }
                    },
                    {
                      "start": {
                        "line": 45
                      },
                      "end": {
                        "line": 45
                      }
                    },
                    {
                      "start": {
                        "line": 46
                      },
                      "end": {
                        "line": 46
                      }
                    }
                  ]
                }
              ]
            },
            "step6": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 47
                      },
                      "end": {
                        "line": 47
                      }
                    }
                  ]
                }
              ]
            },
            "step7": {},
            "step8": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 51
                      },
                      "end": {
                        "line": 51
                      }
                    }
                  ]
                }
              ]
            },
            "step9": {
              "locations": [
                {
                  "ranges": [
                    {
                      "start": {
                        "line": 52
                      },
                      "end": {
                        "line": 52
                      }
                    },
                    {
                      "start": {
                        "line": 53
                      },
                      "end": {
                        "line": 53
                      }
                    },
                    {
                      "start": {
                        "line": 54
                      },
                      "end": {
                        "line": 54
                      }
                    }
                  ]
                }
              ]
            }
          },
          "infos": [
            {
              "filename": "Dockerfile",
              "language": "Dockerfile",
              "data": "",
              "llbDefinition": [
                {
                  "id": "step0",
                  "op": {
                    "Op": {
                      "source": {
                        "identifier": "local://dockerfile",
                        "attrs": {
                          "local.differ": "none",
                          "local.followpaths": "[\"Dockerfile\",\"Dockerfile.dockerignore\",\"dockerfile\"]",
                          "local.sharedkeyhint": "dockerfile"
                        }
                      }
                    },
                    "constraints": {}
                  }
                },
                {
                  "id": "step1",
                  "op": {
                    "Op": {}
                  },
                  "inputs": [
                    "step0:0"
                  ]
                }
              ],
              "digestMapping": {
                "sha256:0a1d6742c12934ecbdba34941d4a1af79a07320ce0b381cec1e43005440cc2d8": "step1",
                "sha256:cdc1ed94d144553f47dcbbd74fda71b5e46d1050efc3b0f0313ceb9616ecfbcc": "step0"
              }
            }
          ]
        },
        "layers": {
          "step10:0": [
            [
              {
                "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                "digest": "sha256:1e26d7028bc62621b4864284b2c6019eb7c882f5785bd937d7ca6e6753434a7a",
                "size": 151
              }
            ]
          ],
          "step1:0": [
            [
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:1f3e46996e2966e4faa5846e56e76e3748b7315e2ded61476c24403d592134f0",
                "size": 3641715
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:770d06493b771781077b67de85b7029aff76516b3b01c2e176c88dc34f8f439a",
                "size": 94
              }
            ]
          ],
          "step4:0": [
            [
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:1f3e46996e2966e4faa5846e56e76e3748b7315e2ded61476c24403d592134f0",
                "size": 3641715
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:587c9764f7cbb7538537e515a99396d84845bf1fadeff0a03a6ebdb6cb699e6d",
                "size": 294883
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:67b1e9584e1979ea75698173e605956715dd1408a24052dfc4991b231c127706",
                "size": 69363444
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:bb3d89699aae28868e2ed903c6ec2dd42e83445423c6341084c0242afa5e5261",
                "size": 127
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                "size": 32
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:6390c9e16af5a0bcbc5949cfa9e220778ff9a6728ea5d6afc1692616c6d9564b",
                "size": 17019
              }
            ]
          ],
          "step5:0": [
            [
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:1f3e46996e2966e4faa5846e56e76e3748b7315e2ded61476c24403d592134f0",
                "size": 3641715
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:587c9764f7cbb7538537e515a99396d84845bf1fadeff0a03a6ebdb6cb699e6d",
                "size": 294883
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:67b1e9584e1979ea75698173e605956715dd1408a24052dfc4991b231c127706",
                "size": 69363444
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:bb3d89699aae28868e2ed903c6ec2dd42e83445423c6341084c0242afa5e5261",
                "size": 127
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                "size": 32
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:6390c9e16af5a0bcbc5949cfa9e220778ff9a6728ea5d6afc1692616c6d9564b",
                "size": 17019
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:eb2b1f59c3817086d3eaa536b4c9a38994156b08c247334e4ec91039a32d0824",
                "size": 271716729
              }
            ]
          ],
          "step6:0": [
            [
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:1f3e46996e2966e4faa5846e56e76e3748b7315e2ded61476c24403d592134f0",
                "size": 3641715
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:587c9764f7cbb7538537e515a99396d84845bf1fadeff0a03a6ebdb6cb699e6d",
                "size": 294883
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:67b1e9584e1979ea75698173e605956715dd1408a24052dfc4991b231c127706",
                "size": 69363444
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:bb3d89699aae28868e2ed903c6ec2dd42e83445423c6341084c0242afa5e5261",
                "size": 127
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                "size": 32
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:6390c9e16af5a0bcbc5949cfa9e220778ff9a6728ea5d6afc1692616c6d9564b",
                "size": 17019
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:eb2b1f59c3817086d3eaa536b4c9a38994156b08c247334e4ec91039a32d0824",
                "size": 271716729
              },
              {
                "mediaType": "application/vnd.oci.image.layer.v1.tar+gzip",
                "digest": "sha256:d9364747560c7027482e2b5ff8ce96f90db49a386585f4989d0ca570d2431200",
                "size": 93
              }
            ]
          ]
        }
      }
    }
  }
}